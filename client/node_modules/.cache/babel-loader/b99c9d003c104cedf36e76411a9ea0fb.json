{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/Code /CodeChange/client/src/components/Button.tsx\";\nimport React from \"react\"; // import UilMinus from '@iconscout/react-unicons/icons/uil-minus'\n// <UilReact size=\"140\" color=\"#61DAFB\" />  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  onClick,\n  type = \"button\",\n  color = \"light\",\n  children,\n  className = \"\",\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn btn-${color} ${className}`,\n    type: type,\n    onClick: onClick,\n    disabled: disabled,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/daniel/Escritorio/Code /CodeChange/client/src/components/Button.tsx"],"names":["React","Button","onClick","type","color","children","className","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;;;AAWA,MAAMC,MAA4C,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAI,GAAG,QAAlB;AAA4BC,EAAAA,KAAK,GAAG,OAApC;AAA6CC,EAAAA,QAA7C;AAAuDC,EAAAA,SAAS,GAAG,EAAnE;AAAuEC,EAAAA;AAAvE,CAAD,KAAuF;AACxI,sBACI;AAAQ,IAAA,SAAS,EAAG,WAAUH,KAAM,IAAGE,SAAU,EAAjD;AAAoD,IAAA,IAAI,EAAEH,IAA1D;AAAgE,IAAA,OAAO,EAAED,OAAzE;AAAkF,IAAA,QAAQ,EAAEK,QAA5F;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMJ,M;AAQN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n// import UilMinus from '@iconscout/react-unicons/icons/uil-minus'\n// <UilReact size=\"140\" color=\"#61DAFB\" />  \n\nexport interface IButtonProps {\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    type?: \"button\" | \"submit\" | \"reset\";\n    color?: \"success\" | \"danger\" | \"primary\" | \"light\" | \"none\";\n    children?: React.ReactNode;\n    className?: string;\n    disabled?: boolean;\n}\n\nconst Button: (props: IButtonProps) => JSX.Element = ({ onClick, type = \"button\", color = \"light\", children, className = \"\", disabled }) => {\n    return (\n        <button className={`btn btn-${color} ${className}`} type={type} onClick={onClick} disabled={disabled} >\n            {children}\n        </button>\n    )\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}