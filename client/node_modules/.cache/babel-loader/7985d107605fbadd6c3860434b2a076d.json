{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/Code Challenge /client/src/components/StudentTable.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkedStudent, deleteStudent } from \"../entities/students/student.reducer\";\nimport { CheckedAll } from \"./Checked\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport StudentEntity from \"./StudentEntity\";\nimport UpdateModal from \"./UpdateModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentTable = () => {\n  _s();\n\n  const entities = useSelector(root => {\n    var _root$student;\n\n    return (_root$student = root.student) === null || _root$student === void 0 ? void 0 : _root$student.entities;\n  });\n  const checked = useSelector(root => {\n    var _root$student2;\n\n    return (_root$student2 = root.student) === null || _root$student2 === void 0 ? void 0 : _root$student2.checked;\n  });\n  const loading = useSelector(root => {\n    var _root$student3;\n\n    return (_root$student3 = root.student) === null || _root$student3 === void 0 ? void 0 : _root$student3.loading;\n  });\n  const dispatch = useDispatch();\n  const [checkedAll, setCheckedAll] = useState(0);\n\n  const checkAll = v => {\n    entities === null || entities === void 0 ? void 0 : entities.forEach(s => {\n      dispatch(checkedStudent(s._id, v === 1));\n    });\n    setCheckedAll(v === 1 ? 1 : 0);\n  };\n\n  useEffect(() => {\n    let c = 0;\n    let total = entities === null || entities === void 0 ? void 0 : entities.length;\n    checked && Object.keys(checked).forEach(v => {\n      if (v && checked[v]) c++;\n    });\n    if (c === 0) setCheckedAll(0);else if (total === c) setCheckedAll(1);else setCheckedAll(2);\n  }, [checked]);\n  const [id, setId] = useState('');\n  const [update, setUpdate] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n\n  const onEdit = id => {\n    setId(id);\n    setUpdate(true);\n  };\n\n  const onDelete = id => {\n    setId(id);\n    setOpenDelete(true);\n  };\n\n  const acceptDelete = () => {\n    dispatch(deleteStudent(id));\n    setOpenDelete(false);\n  };\n\n  const rejectDelete = () => {\n    setOpenDelete(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"student-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(CheckedAll, {\n              checked: checkedAll,\n              onChange: v => checkAll(v)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"emphasis\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: !loading && entities && (entities === null || entities === void 0 ? void 0 : entities.length) > 0 && entities.map(v => /*#__PURE__*/_jsxDEV(StudentEntity, {\n          entity: v,\n          onEdit: onEdit,\n          onDelete: onDelete\n        }, v._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this), !loading && entities && (entities === null || entities === void 0 ? void 0 : entities.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-table muted\",\n      children: \"There is not student to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(UpdateModal, {\n      idStudent: id,\n      openModal: update,\n      setOpenModal: v => setUpdate(v)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Student\",\n      open: openDelete,\n      onAccept: acceptDelete,\n      onReject: rejectDelete,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Do you realy want to delete the student?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: \"This action is not reversible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StudentTable, \"lFnmGYEz0ksqyNCCjWANd3zqESo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = StudentTable;\nexport default StudentTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentTable\");","map":{"version":3,"sources":["/home/daniel/Escritorio/Code Challenge /client/src/components/StudentTable.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","checkedStudent","deleteStudent","CheckedAll","Loading","Modal","StudentEntity","UpdateModal","StudentTable","entities","root","student","checked","loading","dispatch","checkedAll","setCheckedAll","checkAll","v","forEach","s","_id","c","total","length","Object","keys","id","setId","update","setUpdate","openDelete","setOpenDelete","onEdit","onDelete","acceptDelete","rejectDelete","map"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkedStudent, deleteStudent } from \"../entities/students/student.reducer\";\nimport { IRootState } from \"../shared/reducers\";\nimport { CheckedAll } from \"./Checked\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport StudentEntity from \"./StudentEntity\";\nimport UpdateModal from \"./UpdateModal\";\n\nconst StudentTable = () => {\n\n\tconst entities = useSelector((root: IRootState) => root.student?.entities)\n\tconst checked = useSelector((root: IRootState) => root.student?.checked)\n\tconst loading = useSelector((root: IRootState) => root.student?.loading)\n\n\tconst dispatch = useDispatch();\n\n\tconst [checkedAll, setCheckedAll] = useState(0)\n\n\tconst checkAll = (v: number) => {\n\t\tentities?.forEach(s => {\n\t\t\tdispatch(checkedStudent(s._id, v === 1))\n\t\t})\n\t\tsetCheckedAll(v === 1 ? 1 : 0);\n\t}\n\n\tuseEffect(() => {\n\t\tlet c = 0;\n\t\tlet total = entities?.length;\n\t\tchecked && Object.keys(checked).forEach(v => {\n\t\t\tif (v && checked[v]) c++;\n\t\t})\n\t\tif (c === 0) setCheckedAll(0)\n\t\telse if (total === c) setCheckedAll(1)\n\t\telse setCheckedAll(2)\n\t}, [checked])\n\n\tconst [id, setId] = useState('');\n\tconst [update, setUpdate] = useState(false);\n\tconst [openDelete, setOpenDelete] = useState(false);\n\n\tconst onEdit = (id: string) => {\n\t\tsetId(id);\n\t\tsetUpdate(true);\n\t}\n\n\tconst onDelete = (id: string) => {\n\t\tsetId(id);\n\t\tsetOpenDelete(true);\n\t}\n\n\tconst acceptDelete = () => {\n\t\tdispatch(deleteStudent(id))\n\t\tsetOpenDelete(false)\n\t}\n\n\tconst rejectDelete = () => {\n\t\tsetOpenDelete(false)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<table className=\"student-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th><CheckedAll checked={checkedAll} onChange={(v: number) => checkAll(v)} /></th>\n\t\t\t\t\t\t<th className=\"emphasis\">First Name</th>\n\t\t\t\t\t\t<th className=\"emphasis\">Last Name</th>\n\t\t\t\t\t\t<th className=\"emphasis\">Email</th>\n\t\t\t\t\t\t<th className=\"emphasis\">Age</th>\n\t\t\t\t\t\t<th className=\"emphasis\">Grade</th>\n\t\t\t\t\t\t<th className=\"emphasis\">Actions</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{!loading && entities && entities?.length > 0 && entities.map(v => (\n\t\t\t\t\t\t<StudentEntity key={v._id} entity={v} onEdit={onEdit} onDelete={onDelete} />\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t{loading && <Loading />}\n\t\t\t{!loading && entities && entities?.length === 0 && <div className=\"empty-table muted\">There is not student to show</div>}\n\t\t\t<UpdateModal idStudent={id} openModal={update} setOpenModal={(v: boolean) => setUpdate(v)} />\n\t\t\t<Modal title=\"Delete Student\" open={openDelete} onAccept={acceptDelete} onReject={rejectDelete}>\n\t\t\t\t<div className=\"delete-modal\">\n\t\t\t\t\t<span>Do you realy want to delete the student?</span>\n\t\t\t\t\t<span className=\"muted\">This action is not reversible</span>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n\nexport default StudentTable;"]},"metadata":{},"sourceType":"module"}