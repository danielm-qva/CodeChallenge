{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport notificationMiddleware from './notification-middleware';\nimport errorMiddleware from './error-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../shared/reducers';\nimport './axios-interceptor';\nconst defaultMiddlewares = [thunkMiddleware, errorMiddleware, notificationMiddleware, promiseMiddleware, loggerMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst initialize = (initialState, middlewares = []) => createStore(reducer, initialState, composeEnhancers(applyMiddleware(...defaultMiddlewares, ...middlewares)));\n\nexport default initialize;","map":{"version":3,"sources":["/home/daniel/Escritorio/Code Challenge /client/src/config/store.ts"],"names":["createStore","applyMiddleware","compose","notificationMiddleware","errorMiddleware","loggerMiddleware","promiseMiddleware","thunkMiddleware","reducer","defaultMiddlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialize","initialState","middlewares"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoC,oBAApC;AAEA,OAAO,qBAAP;AAQA,MAAMC,kBAAkB,GAAG,CACzBF,eADyB,EAEzBH,eAFyB,EAGzBD,sBAHyB,EAIzBG,iBAJyB,EAKzBD,gBALyB,CAA3B;AAQA,MAAMK,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE;;AAEA,MAAMW,UAAU,GAAG,CAACC,YAAD,EAA4BC,WAAW,GAAG,EAA1C,KAAiDf,WAAW,CAC7EQ,OAD6E,EAE7EM,YAF6E,EAG7EJ,gBAAgB,CAACT,eAAe,CAAC,GAAGQ,kBAAJ,EAAwB,GAAGM,WAA3B,CAAhB,CAH6D,CAA/E;;AAMA,eAAeF,UAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport notificationMiddleware from './notification-middleware';\nimport errorMiddleware from './error-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer, { IRootState } from '../shared/reducers';\n\nimport './axios-interceptor'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst defaultMiddlewares = [\n  thunkMiddleware,\n  errorMiddleware,\n  notificationMiddleware,\n  promiseMiddleware,\n  loggerMiddleware\n];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(\n  reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...defaultMiddlewares, ...middlewares))\n);\n\nexport default initialize;\n"]},"metadata":{},"sourceType":"module"}