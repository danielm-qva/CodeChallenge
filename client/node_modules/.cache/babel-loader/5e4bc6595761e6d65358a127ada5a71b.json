{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/Code Challenge /client/src/components/DeleteStudent.tsx\",\n    _s = $RefreshSig$();\n\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBatchStudent } from \"../entities/students/student.reducer\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\"; // import UilMinus from '@iconscout/react-unicons/icons/uil-minus'\n// <UilReact size=\"140\" color=\"#61DAFB\" />  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteButton = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const onClick = () => {\n    setOpen(true);\n  };\n\n  const ids = useSelector(root => {\n    var _root$student;\n\n    return (_root$student = root.student) === null || _root$student === void 0 ? void 0 : _root$student.checked;\n  });\n\n  const accept = e => {\n    const deleteId = [];\n    ids && Object.keys(ids).forEach(v => {\n      ids[v] && deleteId.push(v);\n    });\n    dispatch(deleteBatchStudent({\n      data: deleteId\n    }));\n    setOpen(false);\n  };\n\n  const reject = e => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"danger\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"icon\",\n        icon: faMinusCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), \"Delete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Student\",\n      open: open,\n      onAccept: accept,\n      onReject: reject,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Do you realy want to delete all maked student?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: \"This action is not reversible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteButton, \"eDWVj9eR0yQhnIQdy+JrlJbtYPU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DeleteButton;\nexport default DeleteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteButton\");","map":{"version":3,"sources":["/home/daniel/Escritorio/Code Challenge /client/src/components/DeleteStudent.tsx"],"names":["faMinusCircle","FontAwesomeIcon","React","useState","useDispatch","useSelector","deleteBatchStudent","Button","Modal","DeleteButton","dispatch","open","setOpen","onClick","ids","root","student","checked","accept","e","deleteId","Object","keys","forEach","v","push","data","reject"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAIA,QAAME,GAAG,GAAGT,WAAW,CAAEU,IAAD;AAAA;;AAAA,4BAAsBA,IAAI,CAACC,OAA3B,kDAAsB,cAAcC,OAApC;AAAA,GAAD,CAAvB;;AAEA,QAAMC,MAAM,GAAIC,CAAD,IAAY;AAC1B,UAAMC,QAAkB,GAAG,EAA3B;AACAN,IAAAA,GAAG,IAAIO,MAAM,CAACC,IAAP,CAAYR,GAAZ,EAAiBS,OAAjB,CAAyBC,CAAC,IAAI;AACpCV,MAAAA,GAAG,CAACU,CAAD,CAAH,IAAUJ,QAAQ,CAACK,IAAT,CAAcD,CAAd,CAAV;AACA,KAFM,CAAP;AAGAd,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC;AAAEoB,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAnB,CAAR;AACAR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAPD;;AASA,QAAMe,MAAM,GAAIR,CAAD,IAAY;AAC1BP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAEC,OAAhC;AAAA,8BACC,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAkC,QAAA,IAAI,EAAEb;AAAxC;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAEW,IAApC;AAA0C,MAAA,QAAQ,EAAEO,MAApD;AAA4D,MAAA,QAAQ,EAAES,MAAtE;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AAcA,CAvCD;;GAAMlB,Y;UAEYL,W,EAQLC,W;;;KAVPI,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBatchStudent } from \"../entities/students/student.reducer\";\nimport { IRootState } from \"../shared/reducers\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\n// import UilMinus from '@iconscout/react-unicons/icons/uil-minus'\n// <UilReact size=\"140\" color=\"#61DAFB\" />  \n\nconst DeleteButton = () => {\n\n\tconst dispatch = useDispatch();\n\n\tconst [open, setOpen] = useState(false)\n\n\tconst onClick = () => {\n\t\tsetOpen(true);\n\t}\n\n\tconst ids = useSelector((root: IRootState) => root.student?.checked)\n\n\tconst accept = (e: any) => {\n\t\tconst deleteId: string[] = []\n\t\tids && Object.keys(ids).forEach(v => {\n\t\t\tids[v] && deleteId.push(v);\n\t\t})\n\t\tdispatch(deleteBatchStudent({ data: deleteId }));\n\t\tsetOpen(false)\n\t}\n\n\tconst reject = (e: any) => {\n\t\tsetOpen(false)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button color=\"danger\" onClick={onClick} >\n\t\t\t\t<FontAwesomeIcon className=\"icon\" icon={faMinusCircle} />\n\t\t\t\tDelete\n\t\t\t</Button>\n\t\t\t<Modal title=\"Delete Student\" open={open} onAccept={accept} onReject={reject}>\n\t\t\t\t<div className=\"delete-modal\">\n\t\t\t\t\t<span>Do you realy want to delete all maked student?</span>\n\t\t\t\t\t<span className=\"muted\">This action is not reversible</span>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n\nexport default DeleteButton;"]},"metadata":{},"sourceType":"module"}