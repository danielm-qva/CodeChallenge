{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/Code /CodeChange/client/src/components/Input.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  name,\n  type,\n  label,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: name,\n      name: name,\n      type: type,\n      value: value,\n      onChange: v => onChange && onChange(v.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/daniel/Escritorio/Code /CodeChange/client/src/components/Input.tsx"],"names":["React","Input","name","type","label","value","onChange","v","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAUA,MAAMC,KAA0C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAC3F,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEJ,IAAhB;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAEF,IAAX;AAAiB,MAAA,IAAI,EAAEA,IAAvB;AAA6B,MAAA,IAAI,EAAEC,IAAnC;AAAyC,MAAA,KAAK,EAAEE,KAAhD;AAAuD,MAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,IAAIA,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMJ,K;AASN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n\nexport interface IInputProps {\n    name: string;\n    label: string;\n    type: React.HTMLInputTypeAttribute;\n    value?: string | number;\n    onChange?: any;\n}\n\nconst Input: (props: IInputProps) => JSX.Element = ({ name, type, label, value, onChange }) => {\n    return (\n        <div className=\"input-group\">\n            <label htmlFor={name}>{label}</label>\n            <input id={name} name={name} type={type} value={value} onChange={v => onChange && onChange(v.target.value)} />\n        </div>\n    )\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}