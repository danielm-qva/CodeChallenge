{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/Code /CodeChange/client/src/components/Options.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = ({\n  name,\n  defaultValue,\n  label,\n  value,\n  onChange,\n  options\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: name,\n      name: name,\n      value: value,\n      onChange: v => onChange && onChange(v.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: defaultValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), options && options.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: v,\n        children: v\n      }, v, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 46\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/home/daniel/Escritorio/Code /CodeChange/client/src/components/Options.tsx"],"names":["React","Options","name","defaultValue","label","value","onChange","options","v","target","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAWA,MAAMC,OAA8C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA;AAA9C,CAAD,KAA6D;AAChH,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEL,IAAhB;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,EAAE,EAAEF,IAAZ;AAAkB,MAAA,IAAI,EAAEA,IAAxB;AAA8B,MAAA,KAAK,EAAEG,KAArC;AAA4C,MAAA,QAAQ,EAAEG,CAAC,IAAIF,QAAQ,IAAIA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAA/E;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA,kBAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKI,OAAO,IAAIA,OAAO,CAACG,GAAR,CAAYF,CAAC,iBAAI;AAAgB,QAAA,KAAK,EAAEA,CAAvB;AAAA,kBAA2BA;AAA3B,SAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,cAAjB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMP,O;AAYN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nexport interface IOptionsProps {\n    name: string;\n    label: string;\n    defaultValue: string;\n    options?: string[];\n    value?: string | number;\n    onChange?: any;\n}\n\nconst Options: (props: IOptionsProps) => JSX.Element = ({ name, defaultValue, label, value, onChange, options }) => {\n    return (\n        <div className=\"input-group\">\n            <label htmlFor={name}>{label}</label>\n            <select id={name} name={name} value={value} onChange={v => onChange && onChange(v.target.value)} >\n                <option value=\"\">{defaultValue}</option>\n                {options && options.map(v => <option key={v} value={v}>{v}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}