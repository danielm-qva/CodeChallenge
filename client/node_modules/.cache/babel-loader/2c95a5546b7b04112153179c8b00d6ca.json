{"ast":null,"code":"import axios from 'axios';\nimport { SERVER_API_URL } from './constants';\nconst TIMEOUT = 1 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = SERVER_API_URL;\n\nconst setupAxiosInterceptors = onUnauthenticated => {\n  const onRequestSuccess = config => {\n    return config;\n  };\n\n  const onResponseSuccess = response => response;\n\n  const onResponseError = err => {\n    return Promise.reject(err);\n  };\n\n  axios.interceptors.request.use(onRequestSuccess);\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\n\nexport default setupAxiosInterceptors;","map":{"version":3,"sources":["/home/daniel/Escritorio/Code /CodeChange/client/src/config/axios-interceptor.ts"],"names":["axios","SERVER_API_URL","TIMEOUT","defaults","timeout","baseURL","setupAxiosInterceptors","onUnauthenticated","onRequestSuccess","config","onResponseSuccess","response","onResponseError","err","Promise","reject","interceptors","request","use"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AAEA,MAAMC,OAAO,GAAG,IAAI,EAAJ,GAAS,IAAzB;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyBF,OAAzB;AACAF,KAAK,CAACG,QAAN,CAAeE,OAAf,GAAyBJ,cAAzB;;AAEA,MAAMK,sBAAsB,GAAIC,iBAAD,IAA4B;AACvD,QAAMC,gBAAgB,GAAIC,MAAD,IAAiB;AACtC,WAAOA,MAAP;AACH,GAFD;;AAGA,QAAMC,iBAAiB,GAAIC,QAAD,IAAmBA,QAA7C;;AACA,QAAMC,eAAe,GAAIC,GAAD,IAAc;AAClC,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,GAFD;;AAGAb,EAAAA,KAAK,CAACgB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BV,gBAA/B;AACAR,EAAAA,KAAK,CAACgB,YAAN,CAAmBL,QAAnB,CAA4BO,GAA5B,CAAgCR,iBAAhC,EAAmDE,eAAnD;AACH,CAVD;;AAYA,eAAeN,sBAAf","sourcesContent":["import axios from 'axios';\n\nimport { SERVER_API_URL } from './constants';\n\nconst TIMEOUT = 1 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = SERVER_API_URL;\n\nconst setupAxiosInterceptors = (onUnauthenticated: any) => {\n    const onRequestSuccess = (config: any) => {\n        return config;\n    };\n    const onResponseSuccess = (response: any) => response;\n    const onResponseError = (err: any) => {\n        return Promise.reject(err);\n    };\n    axios.interceptors.request.use(onRequestSuccess);\n    axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\n\nexport default setupAxiosInterceptors;\n\n"]},"metadata":{},"sourceType":"module"}